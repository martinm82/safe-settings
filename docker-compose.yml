version: '3.4'

x-logging:
  &default-logging
  driver: "json-file"
  options:
    max-size: "200m"
    max-file: "10"

x-labels:
  &default-labels
  application: "github-safe-settings-probot"
  autoheal: true
  env: ${ENV}
  gh_org: ${GH_ORG}

networks:
  web:
    external: false

services:
  autoheal:
    image: willfarrell/autoheal:1.2.0
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - web
    logging: *default-logging
    labels: *default-labels

  probot:
    image: safe-settings
    build: .
    environment:
      NODE_ENV: production
      APP_ID: ${APP_ID}
      GH_ORG: ${GH_ORG}
      WEBHOOK_PROXY_URL: ${WEBHOOK_PROXY_URL}
      PRIVATE_KEY: ${PRIVATE_KEY}
      WEBHOOK_SECRET: ${WEBHOOK_SECRET}
      GITHUB_CLIENT_ID: ${GITHUB_CLIENT_ID}
      GITHUB_CLIENT_SECRET: ${GITHUB_CLIENT_SECRET}
    expose:
      - 3000
    volumes:
      - ${PWD}/.env:/opt/safe-settings/.env
      - ${PWD}/conf/deployment.yml:/opt/safe-settings/deployment-settings.yml
    labels:
      << : *default-labels
      com.scalyr.config.log.attributes.parser: json
      traefik.enable: true
      traefik.port: 3000
      traefik.http.routers.probot.entrypoints: web
      traefik.http.routers.probot.rule: "PathPrefix(`/`)"
    healthcheck:
      test: "wget --no-verbose --tries=1 --spider http://probot:3000/ || exit 1"
      interval: "10s"
      timeout: "10s"
    networks:
      - web
    logging: *default-logging

  proxy:
    image: traefik:v2.9
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--api.dashboard=true"
      - "--api.debug=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=web"
      - "--entrypoints.web.address=:80"
    ports:
      - 80:80
      - 8080:8080
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
    labels: *default-labels
    healthcheck:
      test: "traefik healthcheck --ping || exit 1"
      interval: "10s"
      timeout: "5s"
    networks:
      - web
    logging: *default-logging

  scalyr:
    image: scalyr/scalyr-agent-docker-json:2.1.37-alpine
    depends_on:
      - proxy
    environment:
      SCALYR_API_KEY: "${SCALYR_API_KEY}"
      SCALYR_SERVER: "https://upload.eu.scalyr.com"
      SCALYR_LABELS_AS_ATTRIBUTES: "true"
    volumes:
      - /var/run/docker.sock:/var/scalyr/docker.sock
      - /var/lib/docker/containers:/var/lib/docker/containers
    labels: *default-labels
    healthcheck:
      test: "/usr/sbin/scalyr-agent-2 status || exit 1"
      interval: "60s"
      timeout: "30s"
    networks:
      - web
    logging: *default-logging
